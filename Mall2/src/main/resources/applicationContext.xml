<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--1.开启Spring注解扫描
        只希望处理service和dao，即@Service     @Repository
		@Contoller注解由springMVC框架管理
    -->
    <context:component-scan base-package="indi.xu">
        <!--2.配置哪些注解不扫描-->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--整合Mybatis,去掉Mybatis主配置文件。将内容都放到这里-->
    <!--1.配置数据库配置文件-->
    <context:property-placeholder location="classpath:jdbc-config.properties" ignore-unresolvable="true"/>
    <!--2.配置连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--3.配置SqlSessionFactory工厂-->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--1.注入连接池-->
        <property name="dataSource" ref="dataSource"/>
        <!--2.配置分页插件-->
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <value>
                            <!--数据库类型为mysql-->
                            helperDialect=mysql
                            <!--启用查询合理化-->
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    <!--4.配置dao接口所在的包-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="indi.xu.dao"/>
    </bean>

    <!--5.配置Spring的声明式事务控制-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--5.1配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="find" read-only="true"/>
            <tx:method name="*" isolation="DEFAULT"/>
        </tx:attributes>
    </tx:advice>

    <!--5.2配置Aop增强-->
    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* indi.xu.service.impl.*ServiceImpl.*(..))"/>
    </aop:config>

    <!-- 配置spring开启注解AOP的支持-->
    <!--<aop:aspectj-autoproxy/>-->

    <!--导入redis配置文件-->
    <import resource="spring-redis.xml"/>
</beans>